{"version":3,"sources":["Components/Filter.js","services/persons.js","Components/NewContact.js","Components/Contact.js","Components/ContactList.js","Components/Notification.js","App.js","index.js"],"names":["Filter","_ref","contactFilter","setFilter","react_default","a","createElement","value","onChange","event","target","baseUrl","services_persons","axios","get","then","response","data","newObject","post","Obj","delete","concat","id","put","NewContact","persons","setPersons","setNewName","setNewNumber","newName","newNumber","setNotificationMessage","onSubmit","preventDefault","map","person","name","includes","alert_msg","window","confirm","nameObj","find","changedObj","Object","objectSpread","number","personService","returnedObj","p","msg","error","setTimeout","catch","e","filter","returnedPerson","console","log","type","Contact","onClick","deletedPerson","ContactList","contacts","toLowerCase","Components_Contact","key","Notification","text","colorStyle","color","className","style","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","NotificationMessage","useEffect","initialPersons","src_Components_Notification","Components_Filter","Components_NewContact","Components_ContactList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef7eb707.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ contactFilter, setFilter }) => {\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    return (\n        <div>\n            filter shown with <input value={contactFilter}Â \n                            onChange={handleFilterChange} /> \n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = Obj => {\n  const request = axios.delete(`${baseUrl}/${Obj.id}`)\n  return request.then(() => Obj)\n}\n\nconst update = Obj => {\n  const request = axios.put(`${baseUrl}/${Obj.id}`, Obj)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update }\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst NewContact = ({ persons, setPersons, setNewName, setNewNumber, \n                     newName, newNumber, setNotificationMessage }) => {\n    const addContact = (event) => {\n        event.preventDefault()\n        if (persons.map(person => person.name).includes(newName)) {\n            const alert_msg = `${newName} is already added to the phonebook, \n                               replace old number with new one?`\n            if(window.confirm(alert_msg)) {\n                const nameObj = persons.find(person => person.name === newName)\n                const changedObj = { ...nameObj, number: newNumber }\n                personService.update(changedObj)\n                    .then(returnedObj => {\n                        setPersons(persons.map(p => p.id !== changedObj.id \n                                   ? p : returnedObj))\n                        setNewName('')\n                        setNewNumber('')\n                        setNotificationMessage({\n                            msg: `Changed number for ${changedObj.name}`,\n                            error: false\n                        })\n                        setTimeout(() => setNotificationMessage({\n                            msg: null,\n                            error: false\n                        }), 5000)\n                    })\n                    .catch(e => {\n                        setNotificationMessage({\n                            msg: `${changedObj.name} is already deleted \n                                  from the server`,\n                            error: true\n                        })\n                        setTimeout(() => setNotificationMessage({\n                            msg: null,\n                            error: false\n                        }), 5000)\n                        setPersons(persons.filter(person => \n                                   person.id !== changedObj.id))\n                    })\n            }\n        } else {\n            const nameObj = {\n                name: newName,\n                number: newNumber\n            }\n            personService.create(nameObj)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setNotificationMessage({\n                        msg: `Added ${returnedPerson.name}`,\n                        error: false\n                    })\n                    setTimeout(() => setNotificationMessage({\n                        msg: null,\n                        error: false\n                    }), 5000)\n                })\n                .catch(e => {\n                    console.log(e.response.data)\n                    setNotificationMessage({\n                        msg: e.response.data.error,\n                        error: true\n                    })\n                    setTimeout(() => setNotificationMessage({\n                        msg: null,\n                        error: false\n                    }), 5000)\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value) \n    }\n    \n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value) \n    }\n    \n    return (  \n        <form onSubmit={addContact}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange}Â />\n            </div>\n            <div>\n                number: <input value={newNumber} \n                            onChange={handleNumberChange}Â />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default NewContact\n","import React from 'react'\nimport personService from '../services/persons'\n\nconst Contact = ({ person, persons, setPersons }) => {\n    const handleClick = () => () => {\n        if (window.confirm(`Delete ${person.name} ?`)) {\n            personService.deletePerson(person)\n            .then(deletedPerson => {\n                setPersons(persons.filter(person => \n                                            person.id !== deletedPerson.id))\n            })\n        }\n    }\n    \n    // TODO: Continue from here. Contact is not deleted on frontend even though\n    // it is deleted from backend. Deleting doesnt trigger a re-redner of the \n    // Contact component.\n    return (\n        <div>\n            {person.name} {person.number} \n            <button onClick={handleClick()}>delete</button>\n        </div>\n    )\n}\n\nexport default Contact\n","import React from 'react'\nimport Contact from './Contact'\n\nconst ContactList = ({ persons, contactFilter, setPersons }) => {\n    const contacts = persons.filter(person => person.name.toLowerCase()\n                            .includes(contactFilter.toLowerCase()))\n                            .map(person => <Contact key={person.id}Â \n                            person={person} persons={persons}Â \n                            setPersons={setPersons} />)\n    \n    return (\n        <div>\n            {contacts}   \n        </div>\n    )\n}\n\nexport default ContactList","import React from 'react'\nimport './Notification.css'\n\nconst Notification = ({ text }) => {\n    let colorStyle = {\n        color: 'green'\n    }\n    \n    if (text.error) {\n        colorStyle = {\n            color: 'red'\n        }\n    }\n\n    if (text.msg === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notification\" style={colorStyle}>\n            {text.msg}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './Components/Filter'\nimport NewContact from './Components/NewContact'\nimport ContactList from './Components/ContactList'\nimport personService from './services/persons'\nimport Notification from './Components/Notification'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    const [ contactFilter, setFilter ] = useState('')\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ NotificationMessage, setNotificationMessage ] = useState({\n        msg: null,\n        error: false\n    })\n    \n    const hook = () => {\n        personService.getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }\n    \n    useEffect(hook, [])\n    \n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification text={NotificationMessage} />\n            <Filter contactFilter={contactFilter} \n             setFilter={setFilter} />\n            <h2>add new</h2>\n            <NewContact Â persons={persons} setPersons={setPersons}Â \n             newName={newName} setNewName={setNewName} newNumber={newNumber} \n             setNewNumber={setNewNumber} \n             setNotificationMessage={setNotificationMessage} />\n            <h2>Numbers</h2>\n            <ContactList persons={persons}Â contactFilter={contactFilter} \n             setPersons={setPersons}Â />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}